// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.26.1
// source: rakuten-security-scraper.proto

package main

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// RakutenSecurityScraperClient is the client API for RakutenSecurityScraper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RakutenSecurityScraperClient interface {
	ListWithdrawalHistories(ctx context.Context, in *ListWithdrawalHistoriesRequest, opts ...grpc.CallOption) (*ListWithdrawalHistoriesResponse, error)
}

type rakutenSecurityScraperClient struct {
	cc grpc.ClientConnInterface
}

func NewRakutenSecurityScraperClient(cc grpc.ClientConnInterface) RakutenSecurityScraperClient {
	return &rakutenSecurityScraperClient{cc}
}

func (c *rakutenSecurityScraperClient) ListWithdrawalHistories(ctx context.Context, in *ListWithdrawalHistoriesRequest, opts ...grpc.CallOption) (*ListWithdrawalHistoriesResponse, error) {
	out := new(ListWithdrawalHistoriesResponse)
	err := c.cc.Invoke(ctx, "/RakutenSecurityScraper/ListWithdrawalHistories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RakutenSecurityScraperServer is the server API for RakutenSecurityScraper service.
// All implementations must embed UnimplementedRakutenSecurityScraperServer
// for forward compatibility
type RakutenSecurityScraperServer interface {
	ListWithdrawalHistories(context.Context, *ListWithdrawalHistoriesRequest) (*ListWithdrawalHistoriesResponse, error)
	mustEmbedUnimplementedRakutenSecurityScraperServer()
}

// UnimplementedRakutenSecurityScraperServer must be embedded to have forward compatible implementations.
type UnimplementedRakutenSecurityScraperServer struct {
}

func (UnimplementedRakutenSecurityScraperServer) ListWithdrawalHistories(context.Context, *ListWithdrawalHistoriesRequest) (*ListWithdrawalHistoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWithdrawalHistories not implemented")
}
func (UnimplementedRakutenSecurityScraperServer) mustEmbedUnimplementedRakutenSecurityScraperServer() {
}

// UnsafeRakutenSecurityScraperServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RakutenSecurityScraperServer will
// result in compilation errors.
type UnsafeRakutenSecurityScraperServer interface {
	mustEmbedUnimplementedRakutenSecurityScraperServer()
}

func RegisterRakutenSecurityScraperServer(s grpc.ServiceRegistrar, srv RakutenSecurityScraperServer) {
	s.RegisterService(&RakutenSecurityScraper_ServiceDesc, srv)
}

func _RakutenSecurityScraper_ListWithdrawalHistories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWithdrawalHistoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RakutenSecurityScraperServer).ListWithdrawalHistories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RakutenSecurityScraper/ListWithdrawalHistories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RakutenSecurityScraperServer).ListWithdrawalHistories(ctx, req.(*ListWithdrawalHistoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RakutenSecurityScraper_ServiceDesc is the grpc.ServiceDesc for RakutenSecurityScraper service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RakutenSecurityScraper_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "RakutenSecurityScraper",
	HandlerType: (*RakutenSecurityScraperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListWithdrawalHistories",
			Handler:    _RakutenSecurityScraper_ListWithdrawalHistories_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rakuten-security-scraper.proto",
}
